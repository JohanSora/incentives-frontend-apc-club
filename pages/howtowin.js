import React, { useEffect, useState } from "react";
import ContainerContent from "../components/containerContent";
import { useTranslation } from "react-i18next";
import { useSelector } from "react-redux";
import SelectInputValue from "../components/inputs/SelectInputValue";
import { ArrowDown } from "../components/icons";
import client from "../contentful";
import HtwImage from "../components/htw/htwImage";
import { Select } from "@mantine/core";

const howtowin = ({ htws }) => {
  const lastHTWData = htws.sort(
    (a, b) => new Date(b.date) - new Date(a.date)
  )[0];
  const user = useSelector((state) => state.user.user);
  const [t, i18n] = useTranslation("global");
  const [copy, setCopy] = useState({ text: "", tablePath: "" });
  const [dataHTW, setDataHTW] = useState(lastHTWData);
  const typeSegment = [
    {
      text: "Marketplace",
      svg: (
        <svg
          width="19"
          height="19"
          viewBox="0 0 19 19"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M19 9.5C19 14.7467 14.7467 19 9.5 19C4.2533 19 0 14.7467 0 9.5C0 4.2533 4.2533 0 9.5 0C14.7467 0 19 4.2533 19 9.5Z"
            fill="white"
          />
          <g clip-path="url(#clip0_1036_8488)">
            <path
              d="M14.9073 7.57477H12.5747V7.25669C12.5741 6.45458 12.2604 5.68438 11.7004 5.11009C11.1404 4.5358 10.3784 4.20277 9.57657 4.18192H9.42336C8.62151 4.20277 7.85948 4.5358 7.2995 5.11009C6.73951 5.68438 6.42581 6.45458 6.42519 7.25669V7.57477H4.0926C4.06448 7.57477 4.03751 7.58594 4.01763 7.60583C3.99774 7.62571 3.98657 7.65268 3.98657 7.6808V15.6328C3.98657 15.7453 4.03125 15.8532 4.11079 15.9327C4.19033 16.0122 4.2982 16.0569 4.41068 16.0569H14.5893C14.7017 16.0569 14.8096 16.0122 14.8891 15.9327C14.9687 15.8532 15.0134 15.7453 15.0134 15.6328V7.6808C15.0134 7.65268 15.0022 7.62571 14.9823 7.60583C14.9624 7.58594 14.9355 7.57477 14.9073 7.57477ZM7.48546 7.2832C7.48546 6.17416 8.37104 5.25385 9.48008 5.24218C9.74622 5.23984 10.0102 5.2902 10.2568 5.39036C10.5034 5.49052 10.7277 5.63851 10.9168 5.82578C11.1059 6.01305 11.2561 6.2359 11.3587 6.48149C11.4613 6.72708 11.5142 6.99054 11.5145 7.25669V7.57477H7.48546V7.2832ZM12.4687 9.69531C12.4687 10.4827 12.1559 11.2378 11.5992 11.7945C11.0424 12.3513 10.2873 12.6641 9.49997 12.6641C8.7126 12.6641 7.95749 12.3513 7.40074 11.7945C6.84399 11.2378 6.53122 10.4827 6.53122 9.69531V8.84709H7.37943V9.69531C7.37943 10.2577 7.60284 10.7971 8.00052 11.1948C8.3982 11.5924 8.93756 11.8158 9.49997 11.8158C10.0624 11.8158 10.6017 11.5924 10.9994 11.1948C11.3971 10.7971 11.6205 10.2577 11.6205 9.69531V8.84709H12.4687V9.69531Z"
              fill="#FFC8C5"
            />
            <path
              d="M14.9073 6.95536H12.5747V6.63728C12.5741 5.83516 12.2604 5.06497 11.7004 4.49068C11.1404 3.91639 10.3784 3.58336 9.57657 3.5625H9.42336C8.62151 3.58336 7.85948 3.91639 7.2995 4.49068C6.73951 5.06497 6.42581 5.83516 6.42519 6.63728V6.95536H4.0926C4.06448 6.95536 4.03751 6.96653 4.01763 6.98641C3.99774 7.0063 3.98657 7.03326 3.98657 7.06138V15.0134C3.98657 15.1259 4.03125 15.2337 4.11079 15.3133C4.19033 15.3928 4.2982 15.4375 4.41068 15.4375H14.5893C14.7017 15.4375 14.8096 15.3928 14.8891 15.3133C14.9687 15.2337 15.0134 15.1259 15.0134 15.0134V7.06138C15.0134 7.03326 15.0022 7.0063 14.9823 6.98641C14.9624 6.96653 14.9355 6.95536 14.9073 6.95536ZM7.48546 6.66378C7.48546 5.55474 8.37104 4.63443 9.48008 4.62277C9.74622 4.62042 10.0102 4.67078 10.2568 4.77095C10.5034 4.87111 10.7277 5.01909 10.9168 5.20636C11.1059 5.39363 11.2561 5.61649 11.3587 5.86207C11.4613 6.10766 11.5142 6.37113 11.5145 6.63728V6.95536H7.48546V6.66378ZM12.4687 9.07589C12.4687 9.86325 12.1559 10.6184 11.5992 11.1751C11.0424 11.7319 10.2873 12.0446 9.49997 12.0446C8.7126 12.0446 7.95749 11.7319 7.40074 11.1751C6.84399 10.6184 6.53122 9.86325 6.53122 9.07589V8.22768H7.37943V9.07589C7.37943 9.63829 7.60284 10.1777 8.00052 10.5753C8.3982 10.973 8.93756 11.1964 9.49997 11.1964C10.0624 11.1964 10.6017 10.973 10.9994 10.5753C11.3971 10.1777 11.6205 9.63829 11.6205 9.07589V8.22768H12.4687V9.07589Z"
              fill="#EB1000"
            />
            <path
              d="M12.4688 9.07589C12.4688 9.86325 12.156 10.6184 11.5992 11.1751C11.0425 11.7319 10.2874 12.0446 9.5 12.0446C8.71264 12.0446 7.95753 11.7319 7.40078 11.1751C6.84403 10.6184 6.53125 9.86325 6.53125 9.07589V8.22768H7.37946V9.07589C7.37946 9.63829 7.60288 10.1777 8.00055 10.5753C8.39823 10.973 8.9376 11.1964 9.5 11.1964C10.0624 11.1964 10.6018 10.973 10.9994 10.5753C11.3971 10.1777 11.6205 9.63829 11.6205 9.07589V8.22768H12.4688V9.07589Z"
              fill="white"
            />
          </g>
          <defs>
            <clipPath id="clip0_1036_8488">
              <rect
                width="13.5714"
                height="13.5714"
                fill="white"
                transform="translate(2.71423 2.71429)"
              />
            </clipPath>
          </defs>
        </svg>
      ),
    },
    {
      text: t("htw.renovaciones"),
      svg: (
        <svg
          width="19"
          height="19"
          viewBox="0 0 19 19"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M19 9.5C19 14.7467 14.7467 19 9.5 19C4.2533 19 0 14.7467 0 9.5C0 4.2533 4.2533 0 9.5 0C14.7467 0 19 4.2533 19 9.5Z"
            fill="white"
          />
          <path
            d="M9.50006 3.8C6.05778 3.8 3.2572 6.60088 3.2572 10.0429C3.2572 13.4902 6.05268 16.2857 9.50006 16.2857C12.9423 16.2857 15.7429 13.4851 15.7429 10.0429C15.7429 6.59518 12.9477 3.8 9.50006 3.8ZM12.3214 10.373C12.3214 10.931 12.1559 11.4765 11.8459 11.9404C11.5359 12.4044 11.0952 12.766 10.5797 12.9795C10.0642 13.1931 9.49693 13.249 8.94965 13.1401C8.40238 13.0312 7.89967 12.7625 7.50511 12.368C7.11054 11.9734 6.84184 11.4707 6.73298 10.9234C6.62412 10.3761 6.67999 9.80887 6.89353 9.29335C7.10706 8.77783 7.46868 8.3372 7.93263 8.02719C8.39659 7.71719 8.94206 7.55172 9.50006 7.55172H9.62642L8.90609 6.83139L9.50006 6.23712L11.2949 8.03194L9.50006 9.82676L8.90579 9.23249L9.74377 8.39451C9.67174 8.39211 9.5901 8.3921 9.50006 8.3921C9.10827 8.3921 8.72529 8.50828 8.39953 8.72595C8.07377 8.94361 7.81987 9.25299 7.66994 9.61495C7.52001 9.97692 7.48078 10.3752 7.55722 10.7595C7.63365 11.1437 7.82231 11.4967 8.09935 11.7737C8.37638 12.0508 8.72935 12.2394 9.1136 12.3159C9.49786 12.3923 9.89616 12.3531 10.2581 12.2031C10.6201 12.0532 10.9295 11.7993 11.1471 11.4735C11.3648 11.1478 11.481 10.7648 11.481 10.373V9.95282H12.3214V10.373Z"
            fill="#FFD2C2"
          />
          <path
            d="M9.49993 3.58491C6.23838 3.58491 3.58484 6.23874 3.58484 9.5C3.58484 12.7664 6.23355 15.4151 9.49993 15.4151C12.7615 15.4151 15.415 12.7616 15.415 9.5C15.415 6.23333 12.7666 3.58491 9.49993 3.58491ZM12.1731 9.81282C12.1731 10.3415 12.0163 10.8584 11.7226 11.298C11.4289 11.7376 11.0114 12.0802 10.5229 12.2825C10.0345 12.4848 9.49697 12.5378 8.97843 12.4346C8.45988 12.3315 7.98357 12.0769 7.60972 11.703C7.23587 11.3292 6.98128 10.8529 6.87813 10.3343C6.77499 9.81579 6.82792 9.2783 7.03025 8.78984C7.23257 8.30138 7.5752 7.88389 8.0148 7.59016C8.4544 7.29643 8.97123 7.13965 9.49993 7.13965H9.61966L8.93715 6.45714L9.49993 5.89407L11.2005 7.59466L9.49993 9.29525L8.93686 8.73218L9.73085 7.93819C9.6626 7.93591 9.58525 7.93591 9.49993 7.93591C9.12872 7.93591 8.76584 8.04599 8.45718 8.25223C8.14853 8.45847 7.90796 8.7516 7.7659 9.09456C7.62384 9.43752 7.58667 9.8149 7.65909 10.179C7.73151 10.5431 7.91027 10.8775 8.17276 11.14C8.43525 11.4025 8.76968 11.5812 9.13377 11.6537C9.49785 11.7261 9.87524 11.6889 10.2182 11.5469C10.5612 11.4048 10.8543 11.1642 11.0605 10.8556C11.2668 10.5469 11.3768 10.184 11.3768 9.81282V9.41469H12.1731V9.81282Z"
            fill="#EB1000"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M11.7226 11.5973C12.0163 11.1681 12.1731 10.6636 12.1731 10.1474V10.007H11.3769V10.1474C11.3769 10.5098 11.2668 10.8641 11.0605 11.1654C10.8543 11.4667 10.5612 11.7016 10.2182 11.8403C9.87525 11.979 9.49787 12.0153 9.13379 11.9446C8.7697 11.8739 8.43527 11.6993 8.17278 11.4431C7.91029 11.1868 7.73153 10.8603 7.65911 10.5049C7.62555 10.3402 7.61552 10.1727 7.62857 10.007H6.83065C6.81871 10.2235 6.83437 10.4417 6.87815 10.6565C6.98129 11.1628 7.23589 11.6278 7.60974 11.9928C7.98359 12.3577 8.4599 12.6063 8.97844 12.707C9.49699 12.8077 10.0345 12.756 10.5229 12.5585C11.0114 12.361 11.4289 12.0265 11.7226 11.5973Z"
            fill="#FFC8C5"
          />
          <path
            d="M12.1731 9.81281C12.1731 10.3415 12.0163 10.8583 11.7226 11.2979C11.4289 11.7375 11.0114 12.0802 10.5229 12.2825C10.0345 12.4848 9.49699 12.5378 8.97844 12.4346C8.4599 12.3315 7.98359 12.0769 7.60974 11.703C7.23589 11.3292 6.98129 10.8529 6.87815 10.3343C6.775 9.81577 6.82794 9.27829 7.03027 8.78983C7.23259 8.30137 7.57522 7.88388 8.01482 7.59015C8.45442 7.29642 8.97125 7.13964 9.49995 7.13964H9.61967L8.93716 6.45713L9.49995 5.89406L11.2005 7.59465L9.49995 9.29524L8.93688 8.73217L9.73087 7.93818C9.66262 7.9359 9.58526 7.9359 9.49995 7.9359C9.12873 7.9359 8.76585 8.04598 8.4572 8.25222C8.14854 8.45846 7.90798 8.75159 7.76592 9.09455C7.62386 9.43751 7.58669 9.81489 7.65911 10.179C7.73153 10.5431 7.91029 10.8775 8.17278 11.14C8.43527 11.4025 8.7697 11.5812 9.13379 11.6537C9.49787 11.7261 9.87525 11.6889 10.2182 11.5468C10.5612 11.4048 10.8543 11.1642 11.0605 10.8556C11.2668 10.5469 11.3769 10.184 11.3769 9.81281V9.41468H12.1731V9.81281Z"
            fill="white"
          />
        </svg>
      ),
    },
    {
      text: t("htw.nuevosn"),
      svg: (
        <svg
          width="19"
          height="19"
          viewBox="0 0 19 19"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M19 9.5C19 14.7467 14.7467 19 9.5 19C4.2533 19 0 14.7467 0 9.5C0 4.2533 4.2533 0 9.5 0C14.7467 0 19 4.2533 19 9.5Z"
            fill="white"
          />
          <g clip-path="url(#clip0_1532_10523)">
            <path
              d="M12.4855 14.877C12.4213 14.8773 12.3586 14.8573 12.3065 14.8198L9.85385 13.0417L7.40125 14.8198C7.34885 14.8578 7.28572 14.8782 7.22099 14.8779C7.15626 14.8777 7.09329 14.8569 7.04117 14.8185C6.98905 14.7801 6.95048 14.7262 6.93105 14.6644C6.91162 14.6027 6.91233 14.5363 6.93308 14.475L7.88963 11.6418L5.41052 9.94169C5.35682 9.9049 5.31629 9.85191 5.29486 9.79045C5.27342 9.729 5.2722 9.66229 5.29137 9.60009C5.31054 9.53789 5.3491 9.48345 5.40142 9.44472C5.45373 9.40599 5.51706 9.38501 5.58215 9.38484H8.64061L9.56361 6.54435C9.58349 6.48303 9.62229 6.42957 9.67443 6.39167C9.72657 6.35376 9.78938 6.33334 9.85385 6.33334C9.91832 6.33334 9.98113 6.35376 10.0333 6.39167C10.0854 6.42957 10.1242 6.48303 10.1441 6.54435L11.0671 9.3858H14.1256C14.1907 9.38576 14.2542 9.4066 14.3067 9.44525C14.3591 9.4839 14.3979 9.53834 14.4171 9.60059C14.4364 9.66284 14.4353 9.72963 14.4139 9.79118C14.3925 9.85273 14.3519 9.90581 14.2981 9.94264L11.8181 11.6418L12.7741 14.4743C12.7895 14.5201 12.7939 14.569 12.7868 14.6169C12.7796 14.6648 12.7612 14.7103 12.733 14.7496C12.7048 14.7889 12.6677 14.821 12.6247 14.8432C12.5816 14.8653 12.5339 14.8769 12.4855 14.877Z"
              fill="#FFC8C5"
            />
          </g>
          <g clip-path="url(#clip1_1532_10523)">
            <path
              d="M11.9577 13.8215C11.8935 13.8217 11.8308 13.8017 11.7786 13.7643L9.32602 11.9862L6.87342 13.7643C6.82102 13.8023 6.75789 13.8226 6.69316 13.8224C6.62843 13.8221 6.56545 13.8013 6.51333 13.7629C6.46121 13.7246 6.42265 13.6706 6.40322 13.6089C6.38379 13.5471 6.3845 13.4808 6.40524 13.4195L7.3618 10.5862L4.88269 8.88612C4.82899 8.84934 4.78846 8.79635 4.76702 8.73489C4.74559 8.67343 4.74436 8.60673 4.76354 8.54453C4.78271 8.48232 4.82127 8.42788 4.87358 8.38916C4.9259 8.35043 4.98923 8.32945 5.05432 8.32928H8.11278L9.03577 5.48879C9.05566 5.42746 9.09445 5.37401 9.1466 5.3361C9.19874 5.29819 9.26155 5.27777 9.32602 5.27777C9.39049 5.27777 9.4533 5.29819 9.50544 5.3361C9.55759 5.37401 9.59638 5.42746 9.61627 5.48879L10.5393 8.33023H13.5977C13.6629 8.3302 13.7264 8.35103 13.7788 8.38969C13.8313 8.42834 13.87 8.48277 13.8893 8.54502C13.9086 8.60727 13.9075 8.67407 13.886 8.73562C13.8646 8.79717 13.8241 8.85025 13.7703 8.88708L11.2902 10.5862L12.2462 13.4187C12.2617 13.4646 12.2661 13.5134 12.2589 13.5613C12.2518 13.6092 12.2334 13.6547 12.2052 13.694C12.177 13.7334 12.1399 13.7655 12.0968 13.7876C12.0538 13.8098 12.0061 13.8214 11.9577 13.8215Z"
              fill="#EB1000"
            />
          </g>
          <defs>
            <clipPath id="clip0_1532_10523">
              <rect
                width="9.76389"
                height="9.76389"
                fill="white"
                transform="translate(5.80566 6.86111)"
              />
            </clipPath>
            <clipPath id="clip1_1532_10523">
              <rect
                width="9.76389"
                height="9.76389"
                fill="white"
                transform="translate(4.75 5.01389)"
              />
            </clipPath>
          </defs>
        </svg>
      ),
    },
  ];
  const resellerDist =
    user.companyId !== null
      ? dataHTW.pointsResellers.quantity
      : dataHTW.pointsDist.quantity;

  console.log(dataHTW);

  useEffect(() => {
    if (user.companyId === null) {
      setCopy({
        text: t("htw.copyDist"),
        tablePath: t("htw.pathTableDist"),
      });
    } else {
      setCopy({
        text: t("htw.copyCanal"),
        tablePath: t("htw.pathTableCanal"),
      });
    }
  }, []);

  return (
    <ContainerContent pageTitle={t("dashboard.htw")}>
      <div className="flex flex-col gap-10 mb-12">
        <div className="bg-[#01505b] w-full h-[35vh] relative overflow-hidden flex">
          <div className="bgCointainerHTW"></div>
          <div className="w-full h-full flex justify-center items-center">
            <h2
              className="2xl:!text-4xl font-bold text-white text-center"
              dangerouslySetInnerHTML={{ __html: t("htw.title") }}
            ></h2>
          </div>
        </div>
        <div className="flex flex-col w-full justify-center items-center gap-10">
          <h3
            className="2xl:!text-3xl font-bold xl:!text-2xl lg:!text-xl text-center"
            dangerouslySetInnerHTML={{ __html: t("htw.secondTitle") }}
          ></h3>
          <p
            className="!text-xs text-center"
            dangerouslySetInnerHTML={{ __html: t("htw.phraseSecondTitle") }}
          ></p>
        </div>
        <div className="w-full grid grid-cols-3">
          <div className="flex lg:gap-2 xl:gap-6">
            <div className="lg:px-2 xl:px-6">
              <svg
                width="99"
                height="100"
                viewBox="0 0 99 100"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <rect width="99" height="100" fill="url(#pattern0)" />
                <defs>
                  <pattern
                    id="pattern0"
                    patternContentUnits="objectBoundingBox"
                    width="1"
                    height="1"
                  >
                    <use
                      xlinkHref="#image0_1036_8478"
                      transform="matrix(0.000426439 0 0 0.000422175 0 -0.00555437)"
                    />
                  </pattern>
                  <HtwImage />
                </defs>
              </svg>
            </div>
            <div className="flex flex-col justify-end gap-3 px-3">
              <Select
                value={dataHTW}
                data={htws.map((data) => {
                  return {
                    value: data,
                    label:
                      lastHTWData.date === data.date
                        ? `${new Date(data.date).toLocaleDateString()} (actual)`
                        : new Date(data.date).toLocaleDateString(),
                  };
                })}
                onChange={(data) => setDataHTW(data)}
                name={"dateHTW"}
              />
              <hr />
              <p className="lg:!text-[10px] xl:!text-sm">
                <strong>{t("htw.digipoints1000-1")}</strong>
                <br />
                {t("htw.digipoints1000-2")}
              </p>
            </div>
          </div>
          <div className="col-span-2 grid grid-cols-3 gap-x-6 gap-y-2">
            {typeSegment.map(({ svg, text }) => (
              <div className="flex w-full bg-[#F4F4F4] rounded-lg items-center justify-center gap-3">
                {svg}
                <p className="!text-sm font-bold">{text}</p>
              </div>
            ))}
            {resellerDist.map((num) => (
              <div className="w-full flex items-center justify-center gap-3">
                <svg
                  width="29"
                  height="29"
                  viewBox="0 0 29 29"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <circle cx="14.5" cy="14.5" r="14.5" fill="#FFEEED" />
                  <path
                    d="M13.489 24.2791C13.3292 24.2799 13.1729 24.2319 13.0411 24.1415C12.9092 24.0511 12.8081 23.9227 12.7512 23.7733L11.4919 20.4985C11.4664 20.4325 11.4274 20.3726 11.3773 20.3226C11.3273 20.2725 11.2674 20.2335 11.2014 20.208L7.92567 18.9477C7.77645 18.8905 7.64811 18.7893 7.55757 18.6576C7.46704 18.5259 7.41858 18.3698 7.41858 18.21C7.41858 18.0501 7.46704 17.8941 7.55757 17.7623C7.64811 17.6306 7.77645 17.5295 7.92567 17.4722L11.2004 16.2128C11.2664 16.1873 11.3264 16.1483 11.3764 16.0983C11.4264 16.0483 11.4654 15.9883 11.4909 15.9224L12.7512 12.6466C12.8085 12.4974 12.9097 12.3691 13.0414 12.2785C13.1731 12.188 13.3292 12.1395 13.489 12.1395C13.6488 12.1395 13.8049 12.188 13.9366 12.2785C14.0683 12.3691 14.1695 12.4974 14.2268 12.6466L15.4861 15.9214C15.5116 15.9874 15.5506 16.0473 15.6007 16.0974C15.6507 16.1474 15.7106 16.1864 15.7766 16.2119L19.0324 17.4646C19.1877 17.5222 19.3215 17.6262 19.4156 17.7625C19.5096 17.8988 19.5594 18.0608 19.5581 18.2264C19.5557 18.3834 19.5062 18.5362 19.416 18.6648C19.3258 18.7934 19.1992 18.8919 19.0523 18.9477L15.7776 20.2071C15.7116 20.2326 15.6516 20.2716 15.6016 20.3216C15.5516 20.3716 15.5126 20.4316 15.4871 20.4976L14.2268 23.7733C14.1699 23.9227 14.0688 24.0511 13.9369 24.1415C13.8051 24.2319 13.6488 24.2799 13.489 24.2791Z"
                    fill="#EB1000"
                  />
                  <path
                    d="M20.2325 16.186C20.1157 16.186 20.0016 16.1506 19.9053 16.0844C19.809 16.0182 19.735 15.9244 19.6931 15.8154L18.8678 13.6704C18.8533 13.6326 18.831 13.5983 18.8023 13.5697C18.7737 13.541 18.7394 13.5187 18.7016 13.5042L16.5563 12.679C16.4473 12.6371 16.3536 12.563 16.2875 12.4668C16.2214 12.3705 16.186 12.2564 16.186 12.1396C16.186 12.0229 16.2214 11.9088 16.2875 11.8125C16.3536 11.7162 16.4473 11.6422 16.5563 11.6002L18.7016 10.7751C18.7394 10.7606 18.7737 10.7383 18.8023 10.7096C18.831 10.681 18.8533 10.6467 18.8678 10.6089L19.6869 8.47909C19.7243 8.37838 19.7883 8.28968 19.8721 8.22244C19.9559 8.1552 20.0564 8.11192 20.1628 8.09722C20.2907 8.08174 20.4201 8.10941 20.5305 8.17584C20.6408 8.24228 20.7259 8.34367 20.772 8.46392L21.5973 10.6089C21.6118 10.6467 21.6341 10.681 21.6628 10.7096C21.6914 10.7383 21.7257 10.7606 21.7635 10.7751L23.9088 11.6002C24.0178 11.6422 24.1115 11.7162 24.1776 11.8125C24.2437 11.9088 24.2791 12.0229 24.2791 12.1396C24.2791 12.2564 24.2437 12.3705 24.1776 12.4668C24.1115 12.563 24.0178 12.6371 23.9088 12.679L21.7635 13.5042C21.7257 13.5187 21.6914 13.541 21.6628 13.5697C21.6341 13.5983 21.6118 13.6326 21.5973 13.6704L20.772 15.8154C20.7301 15.9244 20.6561 16.0182 20.5598 16.0844C20.4635 16.1506 20.3494 16.186 20.2325 16.186Z"
                    fill="#FFC8C5"
                  />
                  <path
                    d="M9.77902 12.814C9.67679 12.8139 9.57695 12.783 9.49267 12.7251C9.40838 12.6672 9.34361 12.5852 9.30688 12.4898L8.72541 10.9778C8.71281 10.9448 8.69336 10.9147 8.66834 10.8897C8.64332 10.8647 8.61329 10.8452 8.58022 10.8326L7.06826 10.2512C6.97286 10.2144 6.89083 10.1496 6.83297 10.0654C6.77511 9.98108 6.74414 9.88125 6.74414 9.77902C6.74414 9.67679 6.77511 9.57696 6.83297 9.49268C6.89083 9.4084 6.97286 9.34362 7.06826 9.30688L8.58022 8.72542C8.61325 8.71276 8.64325 8.69329 8.66827 8.66827C8.69328 8.64326 8.71275 8.61326 8.72541 8.58022L9.30171 7.08173C9.33421 6.99351 9.39014 6.91581 9.46348 6.85699C9.53682 6.79817 9.62481 6.76045 9.71798 6.74788C9.82984 6.73429 9.94304 6.75842 10.0396 6.81646C10.1362 6.8745 10.2107 6.96312 10.2512 7.06828L10.8326 8.58022C10.8453 8.61326 10.8648 8.64326 10.8898 8.66827C10.9148 8.69329 10.9448 8.71276 10.9778 8.72542L12.4898 9.30688C12.5852 9.34362 12.6672 9.4084 12.7251 9.49268C12.7829 9.57696 12.8139 9.67679 12.8139 9.77902C12.8139 9.88125 12.7829 9.98108 12.7251 10.0654C12.6672 10.1496 12.5852 10.2144 12.4898 10.2512L10.9778 10.8326C10.9448 10.8452 10.9147 10.8647 10.8897 10.8897C10.8647 10.9147 10.8452 10.9448 10.8326 10.9778L10.2512 12.4898C10.2144 12.5852 10.1497 12.6672 10.0654 12.7251C9.9811 12.783 9.88126 12.8139 9.77902 12.814Z"
                    fill="#FFC8C5"
                  />
                </svg>
                <p className="!text-2xl font-bold text-primary">{num}</p>
              </div>
            ))}
          </div>
        </div>
        <div className="w-full grid grid-cols-3">
          <div className="flex w-full">
            <div className="w-1/3 flex flex-col gap-1">
              <div className="flex flex-col bg-[#F5F5F5] rounded-l-lg p-6 items-center gap-3">
                <figure className="w-[40px]">
                  <img src="/assets/dashboard/DC.webp"></img>
                </figure>
                <p className="font-bold xl:!text-base lg:!text-xs text-center">
                  Document <br /> Cloud
                </p>
              </div>
              <div className="flex flex-col bg-[#F5F5F5] rounded-l-lg p-6 items-center gap-3">
                <figure className="w-[40px]">
                  <img src="/assets/dashboard/cc.webp"></img>
                </figure>
                <p className="font-bold xl:!text-base lg:!text-xs text-center">
                  Creative <br /> Cloud
                </p>
              </div>
            </div>
            <div className="w-2/3 flex flex-col bg-[#F5F5F5] rounded-lg shadow-2xl h-full">
              <div className="flex flex-col h-1/2 justify-between items-center px-6 pt-6">
                <div className="flex flex-col w-full items-center">
                  <p className="mb-2">{t("htw.l1")}</p>
                  <hr className="w-full" />
                </div>

                <div className="flex flex-col w-full items-center">
                  <p className="mb-2">{t("htw.l2")}</p>
                  <hr className="w-full" />
                </div>

                <div className="flex flex-col w-full items-center">
                  <p></p>
                </div>
              </div>
              <div className="flex flex-col h-1/2 justify-between items-center px-6 pb-3">
                <div className="flex flex-col w-full items-center">
                  <p className="mb-1">{t("htw.l3")}</p>
                  <hr className="w-full" />
                </div>

                <div className="flex flex-col w-full items-center">
                  <p className="mb-2">{t("htw.l4")}</p>
                  <hr className="w-full" />
                </div>

                <div className="flex flex-col w-full items-center">
                  <p>{t("htw.l5")}</p>
                </div>
              </div>
            </div>
          </div>
          <div className="col-span-2 grid grid-cols-3 place-items-center [&>*]:border-y-2 [&>*]:w-full [&>*]:h-full [&>*]:flex [&>*]:justify-center [&>*]:items-center [&>*]:lg:!text-xs [&>*]:xl:!text-sm px-2">
            {dataHTW.quantitySales.quantity.map((num) => (
              <>
                <p>{num}</p>
              </>
            ))}
          </div>
        </div>
      </div>
    </ContainerContent>
  );
};

export async function getServerSideProps() {
  const entries = await client.getEntries({
    content_type: "sectionHtw",
  });

  return {
    props: {
      htws: entries.items.map(({ fields }) => fields),
    },
  };
}

export default howtowin;
